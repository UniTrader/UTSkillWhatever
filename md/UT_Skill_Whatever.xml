<?xml version="1.0" encoding="UTF-8"?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UT_Skill_Whatever" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/md.xsd">
  <cues>
    <cue name="Init" checktime="5s" checkinterval="5s">
      <conditions>
        <cue_is_complete cue="md.Setup.Start"/>
      </conditions>
      <actions>
        <!-- set all player Skills to 0 - we want him to build them up himself ;) -->
        <set_skill entity="player.entity" type="skilltype.boarding" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.combat" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.engineering" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.leadership" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.management" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.morale" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.navigation" exact="0"/>
        <set_skill entity="player.entity" type="skilltype.science" exact="0"/>
      </actions>
    </cue>
    <cue name="Change_Player_Skills" instantiate="true" comment="based on player interaction">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$actor" exact="event.param"/>
        <set_value name="$relevantskills" exact="$actor.type.skilltypes"/>
        <set_value name="$irrelevantskills" exact="[ skilltype.boarding , skilltype.combat , skilltype.engineering , skilltype.leadership , skilltype.management , skilltype.morale , skilltype.navigation , skilltype.science ]"/>
        <do_all exact="$relevantskills.count" counter="$i" reverse="true">
          <remove_value name="$irrelevantskills.{$irrelevantskills.indexof.{$relevantskills.{$i}}}"/>
          <!-- if player has already 5 Stars in this Skill - remove it -->
          <do_if value="player.entity.skill.{$relevantskills.{$i}} ge 5">
            <remove_value name="$relevantskills.{$relevantskills.indexof.{$relevantskills.{$i}}}"/>
          </do_if>
        </do_all>
        <!-- if there are no relevant skills to improve - dont do anything -->
        <do_if value="$relevantskills.count">
          <do_any>
            <!-- Skill #2 and #3 may not exist, therefore Error suppression; Skill #4 and #5 are just in case someone introduces that in the future -->
            <add_skill entity="player.entity" type="$relevantskills.{1}" exact="player.entity.skill.{$relevantskills.{1}} + 1" weight="$actor.type.skillrelevance.{$relevantskills.{1}} * ( 5 - player.entity.skill.{$relevantskills.{1} )"/>
            <add_skill entity="player.entity" type="@$relevantskills.{2}" exact="@player.entity.skill.{@$relevantskills.{2}} + 1" weight="@$actor.type.skillrelevance.{@$relevantskills.{2}} * ( 5 - @player.entity.skill.{@$relevantskills.{2} )"/>
            <add_skill entity="player.entity" type="@$relevantskills.{3}" exact="@player.entity.skill.{@$relevantskills.{3}} + 1" weight="@$actor.type.skillrelevance.{@$relevantskills.{3}} * ( 5 - @player.entity.skill.{@$relevantskills.{3} )"/>
            <add_skill entity="player.entity" type="@$relevantskills.{4}" exact="@player.entity.skill.{@$relevantskills.{4}} + 1" weight="@$actor.type.skillrelevance.{@$relevantskills.{4}} * ( 5 - @player.entity.skill.{@$relevantskills.{4} )"/>
            <add_skill entity="player.entity" type="@$relevantskills.{5}" exact="@player.entity.skill.{@$relevantskills.{5}} + 1" weight="@$actor.type.skillrelevance.{@$relevantskills.{5}} * ( 5 - @player.entity.skill.{@$relevantskills.{5} )"/>
          </do_any>
          <!-- If the Player total Skill is over 25 - reduce a Skill not relevant to the NPC the player just interacted with -->
          <do_while value="player.entity.skill.boarding + player.entity.skill.combat+player.entity.skill.engineering + player.entity.skill.leadership + player.entity.skill.management+player.entity.skill.morale + player.entity.skill.navigation + player.entity.skill.science gt 25">
            <set_value name="$skill" exact="$irrelevantskills.random"/>
            <do_if value="player.entity.skill.{$skill} gt 0">
              <add_skill entity="entity.player" type="$irrelevantskills.random" exact="-1"/>
            </do_if>
            <!-- if player skill is 0 in this remove skill from the choices -->
            <do_else>
              <remove_value name="$irrelevantskills.indexof.{$skill}"/>
            </do_else>
          </do_while>
        <show_notification caption="{1001,1918}" details="[ 
         '%2   %1'.[skilltype.boarding.name , player.entity.skill.{skilltype.boarding}] ,
         '%2   %1'.[skilltype.combat.name , player.entity.skill.{skilltype.combat}] ,
         '%2   %1'.[skilltype.engineering.name , player.entity.skill.{skilltype.engineering}] ,
         '%2   %1'.[skilltype.leadership.name , player.entity.skill.{skilltype.leadership}] ,
         '%2   %1'.[skilltype.management.name , player.entity.skill.{skilltype.management}] ,
         '%2   %1'.[skilltype.morale.name , player.entity.skill.{skilltype.morale}] ,
         '%2   %1'.[skilltype.navigation.name , player.entity.skill.{skilltype.navigation}] ,
         '%2   %1'.[skilltype.science.name , player.entity.skill.{skilltype.science}] 
        ]"/>
        </do_if>
      </actions>
    </cue>
    <cue name="Event_hired" instantiate="true">
      <conditions>
        <event_cue_signalled cue="md.NPC_Staff.LogHired"/>
      </conditions>
      <actions>
        <signal_cue_instantly cue="Change_Player_Skills" param="event.param" comment="simply pass through the actor"/>
      </actions>
    </cue>
    <cue name="Event_smalltalk_completed" instantiate="true">
      <conditions>
        <event_conversation_next_section section="gSmalltalk_step"/>
      </conditions>
      <actions>
        <!--                                  1          2                   3              4               5                     6                   7                8 -->
        <!-- event.param2 == [path, followupfactor, penalty, bonus, basechoices, basechoiceidx, stepsleft, rewarddata] -->
        <do_if value="not( event.param2.{7} gt 0 and not (event.param2.{7} == 1 and event.param2.{3} == 0))" comment="no $stepsleft - smalltalk is over (taken from Vanilla Files and inverted)">
          <do_if value="event.param2.{4} ge 5" comment="hard Smalltalk">
            <do_if value="event.param2.{4} ge 5 and not event.param2.{3}" comment="hard smalltalk without penalty">
              <signal_cue_instantly cue="Change_Player_Skills" param="event.object" comment="simply pass through the actor"/>
            </do_if>
            <do_if value="event.param2.{4} ge 7 and event.param2.{3} le 1" comment="very successful smalltalk, little penalty">
              <signal_cue_instantly cue="Change_Player_Skills" param="event.object" comment="simply pass through the actor"/>
            </do_if>
          </do_if>
          <do_else>
            <do_if value="event.param2.{4} ge 1 and not event.param2.{3}" comment="successful smalltalk without penalty">
              <signal_cue_instantly cue="Change_Player_Skills" param="event.object" comment="simply pass through the actor"/>
              <add_inventory entity="player.entity" ware="ware.inv_haze" exact="1" chance="0" comment="FOR TESTING ONLY"/>
            </do_if>
          </do_else>
        </do_if>
      </actions>
    </cue>
    <cue name="Event_Conversation_started" instantiate="true">
      <conditions>
        <event_conversation_started/>
        <check_value value="player.entity.container.isclass.station" comment="only when talking personally"/>
      </conditions>
      <actions>
        <set_value name="$actor" exact="event.object"/>
        <set_value name="$revealskills" exact="true"/>
        <set_value name="$relevantskills" exact="$actor.type.skilltypes"/>
        <do_if value="$relevantskills.count">
          <!-- reveal skills when relevant skills of player are higher -->
          <do_all exact="$relevantskills.count" counter="$i">
            <do_if value="$actor.skill.{$relevantskills.{$i}} gt player.entity.skill.{$relevantskills.{$i}}">
              <set_value name="$revealskills" exact="false"/>
            </do_if>
          </do_all>
          <do_if value="$revealskills">
            <set_skills_visible entity="$actor" visible="true"/>
            <show_help custom="{1003,122}"/>
          </do_if>
        </do_if>
      </actions>
    </cue>
  </cues>
</mdscript>
